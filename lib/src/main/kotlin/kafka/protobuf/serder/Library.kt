/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package kafka.protobuf.serder

import com.google.protobuf.*
import org.apache.kafka.common.serialization.Deserializer
import org.apache.kafka.common.serialization.Serializer

class Library<T: Message> : Deserializer<T>, Serializer<T> {

    private var parseFromMethod: java.lang.reflect.Method? = null
    private var messageClass: Class<*>? = null
    private var messageOrBuilder: MessageOrBuilder? = null
    private var descriptor: Descriptors.Descriptor? = null

    override fun configure(configs: MutableMap<String, *>?, isKey: Boolean) {

        messageClass = Class.forName("com")
        parseFromMethod = messageClass!!.getMethod("parseFrom",  ByteArray::class.java)
        messageOrBuilder = messageClass!!.getMethod("newBuilder").invoke(null) as MessageOrBuilder?
        descriptor = messageOrBuilder!!.descriptorForType
    }

    override fun deserialize(topic: String?, data: ByteArray): T {
        @Suppress("UNCHECKED_CAST")
        return parseFromMethod!!.invoke(null, data) as T
//        return DynamicMessage.parseFrom(descriptor!!, data)
//        Message.Builder
    }

    override fun serialize(topic: String?, data: T): ByteArray {
        return data.toByteArray()

    }

    override fun close() {
    }
}
